From 3f62fe716090c8a99d2195deb838a14429e2bb71 Mon Sep 17 00:00:00 2001
From: Jaroslaw Kurowski <jaroslaw.kurowski@tii.ae>
Date: Tue, 8 Jul 2025 11:28:00 +0400
Subject: ivshmem flat memory support

---
 contrib/ivshmem-server/ivshmem-server.c |  7 +--
 hw/i386/pc_q35.c                        |  2 +
 hw/misc/ivshmem-pci.c                   | 61 ++++++++++++++++++++++++-
 include/hw/misc/ivshmem.h               |  1 +
 4 files changed, 67 insertions(+), 4 deletions(-)

diff --git a/contrib/ivshmem-server/ivshmem-server.c b/contrib/ivshmem-server/ivshmem-server.c
index 2f3c732..e7c7774 100644
--- a/contrib/ivshmem-server/ivshmem-server.c
+++ b/contrib/ivshmem-server/ivshmem-server.c
@@ -11,6 +11,7 @@
 
 #include <sys/socket.h>
 #include <sys/un.h>
+#include <sys/mman.h>
 
 #include "ivshmem-server.h"
 
@@ -297,11 +298,10 @@ ivshmem_server_start(IvshmemServer *server)
                              server->shm_path);
         shm_fd = shm_open(server->shm_path, O_CREAT | O_RDWR, S_IRWXU);
     } else {
-        gchar *filename = g_strdup_printf("%s/ivshmem.XXXXXX", server->shm_path);
+        gchar *filename = g_strdup_printf("%s/ivshmem", server->shm_path);
         IVSHMEM_SERVER_DEBUG(server, "Using file-backed shared memory: %s\n",
                              server->shm_path);
-        shm_fd = mkstemp(filename);
-        unlink(filename);
+        shm_fd = open(filename, O_RDWR | O_CREAT, 0666);
         g_free(filename);
     }
 
@@ -347,6 +347,7 @@ ivshmem_server_start(IvshmemServer *server)
 
     server->sock_fd = sock_fd;
     server->shm_fd = shm_fd;
+    server->cur_id = 1;
 
     return 0;
 
diff --git a/hw/i386/pc_q35.c b/hw/i386/pc_q35.c
index fd96d03..69e1902 100644
--- a/hw/i386/pc_q35.c
+++ b/hw/i386/pc_q35.c
@@ -28,6 +28,7 @@
  * THE SOFTWARE.
  */
 
+#include "hw/misc/ivshmem.h"
 #include "qemu/osdep.h"
 #include "qemu/units.h"
 #include "hw/acpi/acpi.h"
@@ -352,6 +353,7 @@ static void pc_q35_machine_options(MachineClass *m)
     m->no_floppy = 1;
     m->max_cpus = 4096;
     m->no_parallel = !module_object_class_by_name(TYPE_ISA_PARALLEL);
+    machine_class_allow_dynamic_sysbus_dev(m, TYPE_IVSHMEM_FLT);
     machine_class_allow_dynamic_sysbus_dev(m, TYPE_AMD_IOMMU_DEVICE);
     machine_class_allow_dynamic_sysbus_dev(m, TYPE_INTEL_IOMMU_DEVICE);
     machine_class_allow_dynamic_sysbus_dev(m, TYPE_RAMFB_DEVICE);
diff --git a/hw/misc/ivshmem-pci.c b/hw/misc/ivshmem-pci.c
index 900d523..9068e8e 100644
--- a/hw/misc/ivshmem-pci.c
+++ b/hw/misc/ivshmem-pci.c
@@ -36,6 +36,8 @@
 #include "chardev/char-fe.h"
 #include "system/hostmem.h"
 #include "qapi/visitor.h"
+#include "hw/sysbus.h"
+#include "system/system.h"
 
 #include "hw/misc/ivshmem.h"
 #include "qom/object.h"
@@ -59,6 +61,7 @@
 
 #define TYPE_IVSHMEM_COMMON "ivshmem-common"
 typedef struct IVShmemState IVShmemState;
+typedef struct IvshmemFTState IvshmemFTState;
 DECLARE_INSTANCE_CHECKER(IVShmemState, IVSHMEM_COMMON,
                          TYPE_IVSHMEM_COMMON)
 
@@ -74,6 +77,9 @@ DECLARE_INSTANCE_CHECKER(IVShmemState, IVSHMEM_DOORBELL,
 DECLARE_INSTANCE_CHECKER(IVShmemState, IVSHMEM,
                          TYPE_IVSHMEM)
 
+#define TYPE_IVSHMEM_FLT "ivshmem-flt"
+DECLARE_INSTANCE_CHECKER(IvshmemFTState, IVSHMEM_FLT, TYPE_IVSHMEM_FLT)
+
 typedef struct Peer {
     int nb_eventfds;
     EventNotifier *eventfds;
@@ -117,6 +123,15 @@ struct IVShmemState {
     /* migration stuff */
     OnOffAuto master;
     Error *migration_blocker;
+
+    /* flat memory stuff */
+    uint64_t flataddr;
+    DeviceState *flat_dev;
+    MemoryRegion flat_mem;
+};
+
+struct IvshmemFTState {
+    SysBusDevice parent_obj;
 };
 
 /* registers for the Inter-VM shared memory device */
@@ -478,7 +493,9 @@ static void process_msg_shmem(IVShmemState *s, int fd, Error **errp)
 {
     struct stat buf;
     size_t size;
-
+    void *ptr;
+    SysBusDevice *sbd;
+    
     if (fd < 0) {
        error_setg(errp, "server didn't provide fd with shared memory message");
        return;
@@ -494,6 +511,30 @@ static void process_msg_shmem(IVShmemState *s, int fd, Error **errp)
 
     size = buf.st_size;
 
+    /* Let the memory driver know my VM name */
+    if (write(fd, qemu_name, strlen(qemu_name)+1) <= 0) {
+        error_setg_errno(errp, errno,
+            "can't write VM name to shared memory sent by server");
+        close(fd);
+        return;
+    }
+    if (s->flataddr) {
+
+        ptr = mmap(0, size, PROT_READ|PROT_WRITE, MAP_SHARED|MAP_LOCKED,
+                fd, 0);
+        if (ptr == NULL) {
+            error_setg(errp, "can't mmap shared memory region");
+            return;
+        }
+        s->flat_dev = sysbus_create_simple(TYPE_IVSHMEM_FLT, -1, 0);
+
+        memory_region_init_ram_ptr(&s->flat_mem, OBJECT(IVSHMEM_FLT(s->flat_dev)),
+                                   "ivshmem.flat", size, ptr);
+        sbd = SYS_BUS_DEVICE(s->flat_dev);
+        sysbus_init_mmio(sbd, &s->flat_mem);
+        sysbus_mmio_map(sbd, 0, s->flataddr);
+    }
+
     /* mmap the region and map into the BAR2 */
     if (!memory_region_init_ram_from_fd(&s->server_bar2, OBJECT(s),
                                         "ivshmem.bar2", size, RAM_SHARED,
@@ -1082,6 +1123,7 @@ static const Property ivshmem_doorbell_properties[] = {
     DEFINE_PROP_BIT("ioeventfd", IVShmemState, features, IVSHMEM_IOEVENTFD,
                     true),
     DEFINE_PROP_ON_OFF_AUTO("master", IVShmemState, master, ON_OFF_AUTO_OFF),
+    DEFINE_PROP_UINT64("flataddr", IVShmemState, flataddr, 0),
 };
 
 static void ivshmem_doorbell_init(Object *obj)
@@ -1113,6 +1155,15 @@ static void ivshmem_doorbell_class_init(ObjectClass *klass, void *data)
     dc->vmsd = &ivshmem_doorbell_vmsd;
 }
 
+static void ivshmem_flat_class_init(ObjectClass *klass, const void *data)
+{
+    DeviceClass *dc = DEVICE_CLASS(klass);
+
+    dc->hotpluggable = true;
+    set_bit(DEVICE_CATEGORY_MISC, dc->categories);
+    dc->user_creatable = false;
+}
+
 static const TypeInfo ivshmem_doorbell_info = {
     .name          = TYPE_IVSHMEM_DOORBELL,
     .parent        = TYPE_IVSHMEM_COMMON,
@@ -1121,11 +1172,19 @@ static const TypeInfo ivshmem_doorbell_info = {
     .class_init    = ivshmem_doorbell_class_init,
 };
 
+static const TypeInfo ivshmem_flat_info = {
+    .name = TYPE_IVSHMEM_FLT,
+    .parent = TYPE_SYS_BUS_DEVICE,
+    .instance_size = sizeof(IvshmemFTState),
+    .class_init = ivshmem_flat_class_init,
+};
+
 static void ivshmem_register_types(void)
 {
     type_register_static(&ivshmem_common_info);
     type_register_static(&ivshmem_plain_info);
     type_register_static(&ivshmem_doorbell_info);
+    type_register_static(&ivshmem_flat_info);
 }
 
 type_init(ivshmem_register_types)
diff --git a/include/hw/misc/ivshmem.h b/include/hw/misc/ivshmem.h
index 433ef53..8449ff8 100644
--- a/include/hw/misc/ivshmem.h
+++ b/include/hw/misc/ivshmem.h
@@ -21,5 +21,6 @@
 #define IVSHMEM_H
 
 #define IVSHMEM_PROTOCOL_VERSION 0
+#define TYPE_IVSHMEM_FLT "ivshmem-flt"
 
 #endif /* IVSHMEM_H */
-- 
2.50.0
