From 063ac77d7ae304e55dccc08c1eaa65cdd8d63c19 Mon Sep 17 00:00:00 2001
From: Vunny Sodhi <vunny.sodhi@unikie.com>
Date: Tue, 12 Aug 2025 16:16:27 +0300
Subject: [PATCH] feat: dynamically detect iGPU PCI address at runtime

Replace hardcoded IGPU_PCI macro with a runtime function that uses
to detect the full PCI address of the iGPU. Ensures correct domain
format (e.g., 0000:00:02.0) and allows the code to adapt to different
hardware configurations without recompilation.
---
 tools/intel_gpu_top.c | 20 +++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)

diff --git a/tools/intel_gpu_top.c b/tools/intel_gpu_top.c
index 54e71e559..3b28b0c6a 100644
--- a/tools/intel_gpu_top.c
+++ b/tools/intel_gpu_top.c
@@ -346,7 +346,25 @@ static int engine_cmp(const void *__a, const void *__b)
 		return a->instance - b->instance;
 }
 
-#define IGPU_PCI "0000:00:02.0"
+static const char *get_igpu_pci(void) {
+    static char pci_addr[64] = "0000:00:02.0"; // default fallback
+
+    FILE *fp = popen("lspci -D | grep -i 'VGA compatible controller' | awk '{print $1}'", "r");
+    if (fp == NULL) {
+        perror("popen failed");
+        return pci_addr; // fallback
+    }
+
+    if (fgets(pci_addr, sizeof(pci_addr), fp) != NULL) {
+        // Remove trailing newline
+        pci_addr[strcspn(pci_addr, "\n")] = '\0';
+    }
+    pclose(fp);
+
+    return pci_addr;
+}
+
+#define IGPU_PCI get_igpu_pci()
 #define is_igpu_pci(x) (strcmp(x, IGPU_PCI) == 0)
 #define is_igpu(x) (strcmp(x, "i915") == 0)
 
-- 
2.50.1
