diff --git a/nvidia/platform/t23x/p3768/kernel-dts/cvb/tegra234-p3509-a02.dtsi b/nvidia/platform/t23x/p3768/kernel-dts/cvb/tegra234-p3509-a02.dtsi
index b6f1047d2abe..54f7f23701a0 100644
--- a/nvidia/platform/t23x/p3768/kernel-dts/cvb/tegra234-p3509-a02.dtsi
+++ b/nvidia/platform/t23x/p3768/kernel-dts/cvb/tegra234-p3509-a02.dtsi
@@ -16,8 +16,7 @@
 #include "tegra234-p3509-a02-pcie.dtsi"
 #include "tegra234-p3509-a02-fixed-regulator.dtsi"
 #include "tegra234-p3509-audio.dtsi"
-#include "tegra234-p3768-camera-rbpcv3-imx477.dtsi"
-#include "tegra234-p3768-camera-rbpcv2-imx219.dtsi"
+#include "tegra234-p3768-camera-avt-csi2_w_tc358743.dtsi"
 
 / {
 	gpio-keys {
diff --git a/nvidia/platform/t23x/p3768/kernel-dts/cvb/tegra234-p3768-camera-avt-csi2_w_tc358743.dtsi b/nvidia/platform/t23x/p3768/kernel-dts/cvb/tegra234-p3768-camera-avt-csi2_w_tc358743.dtsi
new file mode 100644
index 000000000000..aba5919f6bc3
--- /dev/null
+++ b/nvidia/platform/t23x/p3768/kernel-dts/cvb/tegra234-p3768-camera-avt-csi2_w_tc358743.dtsi
@@ -0,0 +1,359 @@
+/*
+ * Copyright (c) 2023, Allied Vision Technologies.  All rights reserved
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+#include <dt-bindings/media/camera.h>
+#include <dt-bindings/gpio/gpio.h>
+
+#define CAM_I2C_MUX	TEGRA234_AON_GPIO(CC, 3)
+
+/* camera control gpio definitions */
+#define TC358743_RST  TEGRA234_MAIN_GPIO(AC, 0)  /* to be checked */
+#define TC358743_INT  TEGRA234_MAIN_GPIO(P, 1)  /* to be checked */
+
+/ {
+    gpio@2200000 {
+        camera-control-output-low {
+            gpio-hog;
+            output-low;
+            gpios = <TC358743_RST 0>;
+            label = "cam0-rst";
+        };
+        camera-control-input {
+            status = "okay";
+            gpio-hog;
+            gpios = <TC358743_INT 0>;
+            input;
+            label = "tc358743-int";
+        };
+    };
+
+	tegra-capture-vi  {
+		num-channels = <2>;
+		ports {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			vi_port0: port@0 {
+				reg = <0>;
+				avt_csi2_vi_in0: endpoint {
+					port-index = <0>;
+					bus-width = <4>;
+					remote-endpoint = <&avt_csi2_csi_out0>;
+				};
+			};
+			vi_port1: port@1 {
+				status = "okay";
+				reg = <1>;
+				tc358743_vi_in0: endpoint {
+					status = "okay";
+					port-index = <2>;
+					bus-width = <4>;
+					remote-endpoint = <&tc358743_csi_out0>;
+				};
+            };
+		};
+	};
+
+	host1x@13e00000 {
+		nvcsi@15a00000 {
+			num-channels = <2>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			csi_chan0: channel@0 {
+				reg = <0>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					csi_chan0_port0: port@0 {
+						reg = <0>;
+						avt_csi2_csi_in0: endpoint@0 {
+							port-index = <0>;
+							bus-width = <4>;
+							remote-endpoint = <&avt_csi2_i2c_out0>;
+						};
+					};
+					csi_chan0_port1: port@1 {
+						reg = <1>;
+						avt_csi2_csi_out0: endpoint@1 {
+							remote-endpoint = <&avt_csi2_vi_in0>;
+						};
+					};
+				};
+			};
+			csi_chan1: channel@1 {
+                status = "okay";
+                reg = <1>;
+                ports {
+                    #address-cells = <1>;
+                    #size-cells = <0>;
+                    csi_chan1_port0: port@0 {
+                        status = "okay";
+                        reg = <0>;
+                        tc358743_csi_in0: endpoint@0 {
+                            status = "okay";
+                            port-index = <2>;
+                            bus-width = <4>;
+                            remote-endpoint = <&tc358743_i2c_out0>;
+                        };
+                    };
+                    csi_chan1_port1: port@1 {
+                        status = "okay";
+                        reg = <1>;
+                        tc358743_csi_out0: endpoint@1 {
+                            status = "okay";
+                            remote-endpoint = <&tc358743_vi_in0>;
+                        };
+                    };
+                };
+            };
+		};
+	};
+
+	cam_i2cmux {
+		status="okay";
+		compatible = "i2c-mux-gpio";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		i2c-parent = <&cam_i2c>;
+		mux-gpios = <&tegra_aon_gpio CAM_I2C_MUX GPIO_ACTIVE_HIGH>;
+		i2c_0: i2c@0 {
+			status = "okay";
+			reg = <0>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			avt_csi2_cam0@3c {
+				compatible = "alliedvision,avt_csi2";
+				/* I2C device address */
+				reg = <0x3c>;
+
+				status = "okay";
+
+				/* V4L2 device node location */
+				devnode = "video0";
+
+				mode0 {
+					num_lanes = "4";
+					tegra_sinterface = "serial_a";
+					discontinuous_clk = "no";
+					cil_settletime = "0";
+					embedded_metadata_height = "0";
+					lane_polarity = "6";
+
+					/* not verified: */
+					mclk_khz = "24000";
+					phy_mode = "DPHY";
+					dpcm_enable = "false";
+
+					active_w = "5488";
+					active_h = "4112";
+					pixel_t = "bayer_bggr";
+					csi_pixel_bit_depth = "4";
+					readout_orientation = "0";
+					line_length = "5488";
+					inherent_gain = "1";
+					mclk_multiplier = "31.25";
+					pix_clk_hz = "750000000";
+
+					gain_factor = "16";
+					framerate_factor = "1000000";
+					exposure_factor = "1000000";
+					min_gain_val = "16"; /* 1.0 */
+					max_gain_val = "256"; /* 16.0 */
+					step_gain_val = "1"; /* 0.125 */
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "64";
+					min_framerate = "1500000"; /* 1.5 */
+					max_framerate = "30000000"; /* 30 */
+					step_framerate = "1";
+					min_exp_time = "34"; /* us */
+					max_exp_time = "550385"; /* us */
+					step_exp_time = "1";
+				};
+
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						avt_csi2_i2c_out0: endpoint {
+							port-index = <0>;
+							bus-width = <4>;
+							remote-endpoint = <&avt_csi2_csi_in0>;
+						};
+					};
+				};
+			};
+		};
+
+		i2c_1: i2c@1 {
+			status = "okay";
+			reg = <1>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			tc358743@0f {
+				status = "okay";
+				compatible = "toshiba,tc358743";
+				reg = <0x0F>; /* shifted by 2 */
+				devnode = "video1";
+				refclk_hz = <27000000>;  // refclk_hz -> regclk
+				refclk = <27000000>;  // refclk_hz -> regclk
+
+				reset-gpios = <&tegra_main_gpio TC358743_RST GPIO_ACTIVE_HIGH>;
+				// interrupts = <&tegra_main_gpio TC358743_INT GPIO_ACTIVE_LOW>;
+
+				#clock-cells = <0>;
+				clocks = <&bpmp_clks TEGRA234_CLK_EXTPERIPH1>;
+				clock-names = "extperiph1";
+				// clock-names = "refclk";
+				clock-frequency = <27000000>;
+				mclk = "extperiph1";
+				// mclk = "27000000";
+
+				// mclk_khz ="27000";
+				// dpcm_enable = "false";
+				// mclk_multiplier = "1.35";
+
+				// pix_clk_hz = "300000000";
+				// pixel_clk_hz = "576000000";
+
+				/* Physical dimensions of sensor */
+				physical_w = "4.713";
+				physical_h = "3.494";
+				/* Sensor Model */
+				sensor_model ="tc358743";
+				use_sensor_mode_id = "true";
+
+				num_lanes = "4";
+				tegra_sinterface = "serial_c";
+				phy_mode = "DPHY";
+				discontinuous_clk = "no";
+
+				ddc5v_delay = <2>;
+				enable_hdcp = "false";
+				lineinitcnt = <0xe80>;
+				lptxtimecnt = <0x003>;
+				tclk_headercnt = <0x1403>;
+				tclk_trailcnt = <0x00>;
+				ths_headercnt = <0x0103>;
+				twakeup     = <0x4882>;
+				tclk_postcnt = <0x008>;
+				ths_trailcnt = <0x02>;
+				hstxvregcnt = <0>;
+
+				active_h = "720";
+				active_w = "1280";
+				default_framerate = "50000000"; /* 50.0 fps */
+				lane_polarity = "0";
+
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+
+					port@0 {
+						reg = <0>;
+						tc358743_i2c_out0: endpoint {
+							port-index = <2>;
+							bus-width = <4>;
+							phy_mode = "DPHY";
+
+							cil_settletime = "30";
+
+							data-lanes = <1 2 3 4>;
+							clock-lanes = <0>;
+							link-frequencies = /bits/ 64 <297000000>; // <594000000>; // <297000000>; // <148500000>;
+							remote-endpoint = <&tc358743_csi_in0>;
+						};//end tc358743_i2c_out0: endpoint
+					};//end port@0
+				};//end ports
+			};//end tc358743@0f
+		};
+	};
+
+	tcp: tegra-camera-platform {
+		compatible = "nvidia, tegra-camera-platform";
+		/**
+		* Physical settings to calculate max ISO BW
+		*
+		* num_csi_lanes = <>;
+		* Total number of CSI lanes when all cameras are active
+		*
+		* max_lane_speed = <>;
+		* Max lane speed in Kbit/s
+		*
+		* min_bits_per_pixel = <>;
+		* Min bits per pixel
+		*
+		* vi_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the VI ISO case
+		*
+		* vi_bw_margin_pct = <>;
+		* Vi bandwidth margin in percentage
+		*
+		* max_pixel_rate = <>;
+		* Max pixel rate in Kpixel/s for the ISP ISO case
+		*
+		* isp_peak_byte_per_pixel = <>;
+		* Max byte per pixel for the ISP ISO case
+		*
+		* isp_bw_margin_pct = <>;
+		* Isp bandwidth margin in percentage
+		*/
+		num_csi_lanes = <8>;
+		max_lane_speed = <1500000>;
+		min_bits_per_pixel = <10>;
+		vi_peak_byte_per_pixel = <2>;
+		vi_bw_margin_pct = <25>;
+		max_pixel_rate = <7500000>;
+		isp_peak_byte_per_pixel = <5>;
+		isp_bw_margin_pct = <25>;
+
+		/**
+		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
+		 * The first part is the camera_board_id for the module; if the module is in a FFD
+		 * platform, then use the platform name for this part.
+		 * The second part contains the position of the module, ex. "rear" or "front".
+		 * The third part contains the last 6 characters of a part number which is found
+		 * in the module's specsheet from the vendor.
+		 */
+		modules {
+			cam_module0: module0 {
+				badge = "avt_csi2_front";
+				position = "front";
+				orientation = "1";
+				cam_module0_drivernode0: drivernode0 {
+					pcl_id = "v4l2_sensor";
+					devname = "avt_csi2 9-003c";
+					proc-device-tree = "/proc/device-tree/cam_i2cmux/i2c@0/avt_csi2_cam0@3c";
+				};
+			};
+			cam_module1: module1 {
+				status = "okay";
+				badge = "tc358743_rear_i2c2_c";
+				position = "rear";
+				orientation = "0";
+                cam_module1_drivernode0: drivernode0 {
+                    status = "okay";
+                    /* Declare PCL support driver (classically known as guid)  */
+                    pcl_id = "v4l2_sensor";
+                    /* Driver's v4l2 device name */
+                    devname = "tc358743 10-000f";
+                    /* Declare the device-tree hierarchy to driver instance */
+                    proc-device-tree = "/proc/device-tree/cam_i2cmux/i2c@1/tc358743@0f";
+                };
+            };
+		};
+	};
+};
+
