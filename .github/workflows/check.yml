# SPDX-FileCopyrightText: 2022-2023 TII (SSRC) and the Ghaf contributors
#
# SPDX-License-Identifier: Apache-2.0

name: check
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_run:
    workflows: ["Update npmDepsHash"]
    types:
      - completed
permissions:
  contents: read

jobs:
  run-checks:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.workflow_run.head_sha || github.ref }}
          persist-credentials: false
      - name: Install nix
        uses: cachix/install-nix-action@56a7bb7b56d9a92d4fd1bc05758de7eea4a370a8 # v31
      - name: Check .nix formatting
        run: nix fmt -- --fail-on-change
      - name: Check reuse lint
        run: nix develop --command reuse lint
      - name: Check nix flake show runs successfully
        run: nix flake show --all-systems
      - name: Check templates
        run: |
          set -eux -o pipefail
          tmp_flakes=$(mktemp -d)
          cleanup() { rm -rf "$tmp_flakes"; }
          trap cleanup EXIT
          nix eval --json --apply builtins.attrNames .#templates | jq -r '.[]' | while IFS=$'\t' read -r name; do
            nix flake new -t ".#$name" "${tmp_flakes}/${name}";
            if [[ "$name" == "ghaf-module" ]]; then
                nix-instantiate --parse "${tmp_flakes}/${name}/default.nix"
            else
               nix flake show "${tmp_flakes}/${name}"
            fi
          done
